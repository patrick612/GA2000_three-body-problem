from TBPData import *

setup = {
"EqualMass3Body1": 
lambda:
{"init":
[
[1,[-1.0,0.0,0.0],[0.306893,0.125507,0.0]],
[1,[1.0,0.0,0.0],[0.306893,0.125507,0.0]],
[1,[0.0,0.0,0.0],[(-2)*0.306893,(-2)*0.125507,0.0]]
],
"omega":
0.0
},

"EqualMass3Body2": 
lambda:
{"init":
[
[1,[-1.0,0.0,0.0],[0.083300,0.127889,0.0]],
[1,[1.0,0.0,0.0],[0.083300,0.127889,0.0]],
[1,[0.0,0.0,0.0],[(-2)*0.083300,(-2)*0.127889,0.0]]
],
"omega":
0.0
},

"TwoBodyCircular":
lambda r,m:
{"init":
[
[m[0],[-r*m[1]/(m[1]+m[0]),0.0,0.0],[0.0,np.sqrt(G/(m[0]+m[1]))*m[1],0.0]],
[m[1],[r*m[0]/(m[1]+m[0]),0.0,0.0],[0.0,-np.sqrt(G/(m[0]+m[1]))*m[0],0.0]],
],
"omega":
0.0
},

"LagrangePoints":
lambda:
{"init":
[
[1e2,[-1/(1+1e2),0.0,0.0],[0.0,0.0,0.0]],
[1,[1e2/(1+1e2),0.0,0.0],[0.0,0.0,0.0]],
[0,[0.84862409671786416213,0.0,0.0],[0.0,0.0,0.0]],
[0,[1.14631969632798141260,0.0,0.0],[0.0,0.0,0.0]],
[0,[-1.00412535948298799154,0.0,0.0],[0.0,0.0,0.0]],
[0,[1e2/(1+1e2)*np.cos(np.pi/3),1e2/(1+1e2)*np.sin(np.pi/3),0.0],[0.0,0.0,0.0]]
],
"omega":
np.sqrt(G*(1e2+1))
},

"L4":
lambda:
{"init":
[
[1e2,[-1/(1+1e2),0.0,0.0],[0.0,0.0,0.0]],
[1,[1e2/(1+1e2),0.0,0.0],[0.0,0.0,0.0]],
[0,[1e2/(1+1e2)*np.cos(np.pi/3),1e2/(1+1e2)*np.sin(np.pi/3),0.0],[0.0,0.0,0.0]]
],
"omega":
np.sqrt(G*(1e2+1))
},

"NBody":
lambda:
{"init":
[
[300000,[0.0,0.0,0.0],[0.0,0.0,0.0]],
[1,[10,0.0,0.0],[0.0,np.sqrt(300000/10),0.0]],
[300,[54.5*np.sin(np.pi/5),54.5*np.cos(np.pi/5),0.0],[-np.sqrt(300000/54.5)*np.cos(np.pi/5),np.sqrt(300000/54.5)*np.sin(np.pi/5),0.0]],
[1,[55.7*np.sin(np.pi/5),55.7*np.cos(np.pi/5),0.0],[-np.sqrt(300000/55.5)*np.cos(np.pi/5)*1.2,np.sqrt(300000/55.5)*np.sin(np.pi/5)*1.2,0.0]],
[0.1,[-0.7,1.2,0.0],[-400,-500,0.0]]
],
"omega":
0.0
},

"TwoEqualOneSmall":
lambda:
{"init":
[
[1,[0.5,0.0,0.0],[0.0,np.sqrt(1/2),0.0]],
[1,[-0.5,0.0,0.0],[0.0,-np.sqrt(1/2),0.0]],
[0.001,[0.0,0.0,0.0],[-0.7,0.3,0.0]],
],
"omega":
0.0
},
}